#!/usr/bin/python
#usage: ./generate_input_xml [source xml file name]
import sys
import logging

EXIT_CODE_INCORRECT_ARGUMENTS = 1

def generate_test_xml(pkg_name, address, in_xml_name, test_xml_name="test.xml"):
            
    outFile=open(test_xml_name,'w')
    #outFile.write("<?This file was auto-generated.?>\n")
    #outFile.write("<?Modifications might be lost.?>\n")
    #outFile.write("<?Modifications might be lost.?>\n")
    outFile.write("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n")
    outFile.write("<node id=\"TOP\">\n")
    outFile.write("  <node id=\"" +pkg_name+ "\"        module=\"file://" +in_xml_name+ "\"        address=\"" +address+ "\"/>\n")
    outFile.write("</node>\n")
    outFile.close()

def main():
    # configure logger
    global log
    log = logging.getLogger("main")
    formatter = logging.Formatter('%(name)s %(levelname)s: %(message)s')
    handler = logging.StreamHandler(sys.stdout)
    handler.setFormatter(formatter)
    log.addHandler(handler)
    log.setLevel(logging.WARNING)

    if len(sys.argv)!=2:
        log.critical("Incorrect usage - invalid number of arguments! Make sure that options come before argument.\n" + __doc__)
        sys.exit(EXIT_CODE_INCORRECT_ARGUMENTS)

    pkg_name=sys.argv[-1]
    xml_file_name=pkg_name+".xml"
    # address is hard coded to the same value for now. But it shouldn't matter
    generate_test_xml(pkg_name,"0x17000000",xml_file_name,"test.xml")


if __name__ == '__main__':
    main()
